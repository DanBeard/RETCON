# Chimesh config template
[retcon]

  name = chimesh
  # The mode to run in. Options are
  #   transport = headless transport. No Meshchat or other UI. No authentication.
  #   client    = AP serves a meshchat UI. Authentication handled by wifi auth. No transport
  mode = client
  annouce_every = 3600  # every 60 minutes
  
  # include RNS admin hases here for remote rnsh access. Very useful for hard-to-access trnansport nodes. Not so much for client nodes unless you like tech support
  # don't forget the trailing common if theres only one value, since this is a list
  rnsh_admins = c047833ad24351d739e18144c5f32995,
  
  [[wifi]]
    # Will we host a wifi AP? Depending on user mode this could be used for
    # transport meshing, or meshchat UI
    host_ap = true
    
    # SSID prefixes to connect to. RETCON will try to connect to any AP 
    # with an ssid that starts with this prefix and has this PSK
    # If in client mode then this only affects who RETCON connects to
    # if in transport mode, and host_ap == true then will also host an AP with this prefix
    prefix = "RT-CHIMESH-"
    psk = "JeanBaptistePointeDuSable"

    # only matters if in 'client' mode
    client_ap_prefix = "RT-UI-CHIMESH"
    client_ap_psk = "searstower"  
    
    freq = 2462
    client_iface = 'wlan0'
    ap_iface = 'uap0'
  
   
 


#optional hardcoded interfaces section. Any interfaces you define here will be used as-is
[interfaces]
 [[Chicago Nomadnet TCP]]
    type = BackboneInterface
    interface_enabled = true
    remote = rns.chicagonomad.net
    target_port = 4242
    name = Chicago Nomadnet TCP
    
# Retcon Config plugins. Each of these will have a chance to modify the config
[retcon_plugins]

  [[wifi_mesh]] # Auto mesh with wifi
  
  [[usb_autodetect]]
    [[[rnode]]]
      
      #port = /dev/ttyACM0 # Not needed since we auto-detect 
      frequency = 914875000
      bandwidth = 125000
      txpower = 20
      spreadingfactor = 8
      codingrate = 5


    #[[[meshtastic]]]
    #  mode = ap
    #  data_speed = 6  # Radio speed setting desired for the network. see https://github.com/landandair/RNS_Over_Meshtastic
    #  hop_limit = 5

  
    


